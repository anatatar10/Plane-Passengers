from infrastructure import airport as airport
import domain

def dataExamples():
    plane1 = airport.plane.Plane("1", "wizz", 5, "Paris",
                                      [domain.passenger.Passenger("Ana", "Tatar", "111aaa"),
                                       domain.passenger.Passenger("Anamaria", "Anca", "111bbb"),
                                       domain.passenger.Passenger("Mihai", "Horea", "111ccc")])
    plane2 = airport.plane.Plane("2", "tarom", 10, "Dubai",
                                      [domain.passenger.Passenger("David", "Bobb", "223abc"),
                                       domain.passenger.Passenger("Ioana", "Vlad", "223gda")])
    plane3 = airport.plane.Plane("3", "Lufthansa", 15, "Bucharest",
                                      [domain.passenger.Passenger("Georgiana", "Moldovan", "444abc"),
                                       domain.passenger.Passenger("Denisa", "Muntean", "555ccc"),
                                       domain.passenger.Passenger("George", "Oltean", "666ddd")])
    plane4 = airport.plane.Plane("4", "Qatar", 30, "New York",
                                      [domain.passenger.Passenger("Laura", "Anton", "631fae")])
    plane5 = airport.plane.Plane("5", "Singapore Airline", 35, "Singapore",
                                 [domain.passenger.Passenger("Mircea", "Eliade", "935gfs"),
                                  domain.passenger.Passenger("Mihai", "Eminescu", "258dgg")])

    plane11 = airport.plane.Plane("1", "wizz", 5, "Paris",
                                 [domain.passenger.Passenger("Ana", "Tatar", "111aaa"),
                                  domain.passenger.Passenger("Anamaria", "Anca", "111bbb"),
                                  domain.passenger.Passenger("Mihai", "Horea", "111ccc"),
                                  domain.passenger.Passenger("Cosmin", "Pop", "213cc")])
    plane22 = airport.plane.Plane("2", "tarom", 10, "Paris",
                                 [domain.passenger.Passenger("David", "Bobb", "223abc"),
                                  domain.passenger.Passenger("Ioana", "Vlad", "223gda")])
    plane33 = airport.plane.Plane("3", "Lufthansa", 15, "Paris",
                                 [domain.passenger.Passenger("Georgiana", "Moldovan", "444abc"),
                                  domain.passenger.Passenger("Denisa", "Muntean", "555ccc"),
                                  domain.passenger.Passenger("George", "Oltean", "666ddd")])
    plane44 = airport.plane.Plane("4", "Qatar", 30, "Dubai",
                                 [domain.passenger.Passenger("Laura", "Anton", "631fae")])
    plane55 = airport.plane.Plane("5", "Singapore Airline", 35, "Dubai",
                                 [domain.passenger.Passenger("Mircea", "Eliade", "935gfs"),
                                  domain.passenger.Passenger("Mihai", "Eminescu", "258dgg")])
    airport1 = airport.Airport([plane1, plane2])
    airport2 = airport.Airport([plane1, plane2, plane3])
    airport3 = airport.Airport([plane4])
    airport4 = airport.Airport([plane11, plane22, plane33, plane33, plane44, plane55])

    print("CRUD operations for Passenger Class:")
    print()
    print("Plane 1: ", plane1)
    print()
    print("Add Passenger(Mircea Moldovan, 123abc) to plane 1")
    plane1.addPassenger("Mircea", "Moldovan", "123abc")
    print(plane1)
    print("Add Passenger(Cristian Chinezu, 451kdd) to plane 1")
    plane1.addPassenger("Cristian", "Chinezu", "451kdd")
    print(plane1)
    print("Add Passenger(Maria Pop, 834rew) to plane 1")
    plane1.addPassenger("Maria", "Pop", "834rew")
    print(plane1)
    print()
    print("Get all passengers in plane 1:")
    print(plane1.getAllPassengers())
    print("Get all passengers in plane 2:")
    print(plane2.getAllPassengers())
    print("Get all passengers in plane 3:")
    print(plane3.getAllPassengers())
    print()
    print("Get passenger at index 1 in plane 1:")
    print(plane1.getPassengerAtGivenIndex(1))
    print("Get passenger at index 0 in plane 2:")
    print(plane2.getPassengerAtGivenIndex(0))
    print("Get passenger at index 5 in plane 3:")
    try:
        print(plane3.getPassengerAtGivenIndex(5))
    except IndexError as ie:
        print(ie)
    print()
    print("Update passenger at index 1 in plane 1 with Mary Jones, 452abc")
    plane1.updatePassengerAtGivenIndex(1, "Mary", "Jones", "452abc")
    print(plane1)
    print("Update passenger at index 0 in plane 2 with Cristi Bobb, 123abc")
    plane2.updatePassengerAtGivenIndex(0, "Cristi", "Bobb", "123abc")
    print(plane2)
    print("Update passenger at index 5 in plane 3 with Gheorghe Vlad, 123abc")
    try:
        plane3.updatePassengerAtGivenIndex(5, "Gheorghe", "Vlad", "123abc")
    except IndexError as ie:
        print(ie)
    print()
    print(plane1)
    print("Delete passenger at index 1 in plane 1:")
    plane1.deletePassengerAtGivenIndex(1)
    print(plane1)
    print("Delete passenger at index -3 in plane 1:")
    try:
        plane1.deletePassengerAtGivenIndex(-3)
    except IndexError as ie:
        print(ie)
    print("Delete passenger at index 5 in plane 1:")
    try:
        plane1.deletePassengerAtGivenIndex(5)
    except IndexError as ie:
        print(ie)
    print()
    print("CRUD operations for Plane Class:")
    print()
    print("Airport 1: ", airport1)
    print()
    print("Add Plane(5, SingaporeAirlines, 35, Miami, Passenger(Mihai, Eminescu, 258dgg) to airport 1:")
    airport1.addPlane("5", "SingaporeAirlines", 35, "Miami", [domain.passenger.Passenger("Mihai", "Eminescu", "258dgg")])
    print(airport1)
    print("Add Plane(6, SingaporeAirlines, 40, Washington, Passenger(Mihai, Viteazu, 646hgf) to airport 1:")
    airport1.addPlane("6", "SingaporeAirlines", 40, "Washington", [domain.passenger.Passenger("Mihai", "Viteazu", "646hgf")])
    print(airport1)
    print()
    print("Get all planes in airport 1:")
    print(airport1.getAllPlanes())
    print("Get all planes in airport 2:")
    print(airport2.getAllPlanes())
    print("Get all planes in airport 3:")
    print(airport3.getAllPlanes())
    print()
    print("Get plane at index 1 in airport 1:")
    print(airport1.getPlaneAtGivenIndex(1))
    print("Get plane at index 0 in airport 2:")
    print(airport2.getPlaneAtGivenIndex(0))
    print("Get plane at index 5 in airport 3:")
    try:
        print(airport3.getPlaneAtGivenIndex(5))
    except IndexError as ie:
        print(ie)
    print()
    print("Update plane at index 1 in airport 1 with 2, wizzair, 11, Cluj, Passenger(Dan Popescu, 945nss")
    airport1.updatePlaneAtGivenIndex(1, "2", "wizzair", 11, "Cluj", [domain.passenger.Passenger("Dan", "Popescu", "945nss")])
    print(airport1)
    print("Update plane at index -5 in plane 2 with 22, blueair, 22, Madrid, Passenger(Daniela Popa, 456ggg) in airport 2")
    try:
        airport2.updatePlaneAtGivenIndex(-5, "22", "blueair", 22, [domain.passenger.Passenger("Daniela", "Popa", "456ggg")])
    except IndexError as ie:
        print(ie)
    print("Update plane at index 5 in airport 3 with 55, wizzair, 55, Barcelona, Passenger(Sabina Moldovan, 682tyj)")
    try:
        airport3.updatePlaneAtGivenIndex(5, 55, "wizzair", "55", "Barcelona", [domain.passenger.Passenger("Sabina", "Moldovan", "683tyj")])
    except IndexError as ie:
        print(ie)
    print()
    print("Airport 1:", airport1)
    print("Delete plane at index 1 in airport 1:")
    airport1.deletePlaneAtGivenIndex(1)
    print(airport1)
    print("Delete plane at index -3 in airport 2:")
    try:
        airport2.deletePlaneAtGivenIndex(-3)
    except IndexError as ie:
        print(ie)
    print("Delete plane at index 5 in airport 3:")
    try:
        airport3.deletePlaneAtGivenIndex(5)
    except IndexError as ie:
        print(ie)
    print()
    print("Ex 3: Sort the passengers in a plane by last name")
    print("Plane 1:", plane1)
    print("Sort passengers in plane 1 by last name ascending:")
    plane1.sortPassengersByLastNameAscending()
    print(plane1)
    print("Plane 2:", plane2)
    print("Sort passengers in plane 2 by last name ascending:")
    plane2.sortPassengersByLastNameAscending()
    print(plane2)
    print("Plane 3:", plane3)
    print("Sort passengers in plane 3 by last name ascending:")
    plane3.sortPassengersByLastNameAscending()
    print(plane3)
    print()
    print("Plane 1:", plane1)
    print("Sort passengers in plane 1 by last name descending:")
    plane1.sortPassengersByLastNameDescending()
    print(plane1)
    print("Plane 2:", plane2)
    print("Sort passengers in plane 2 by last name descending:")
    plane2.sortPassengersByLastNameDescending()
    print(plane2)
    print("Plane 3:", plane3)
    print("Sort passengers in plane 3 by last name descending:")
    plane3.sortPassengersByLastNameDescending()
    print(plane3)
    print()
    print("Ex 4: Sort planes according to the number of passengers")
    print("Airport 1:", airport1)
    print("Sort planes in airport 1 according to the number of passengers ascending:")
    airport1.sortPlanesByNumOfPassengersAscending()
    print(airport1)
    print("Airport 2:", airport2)
    print("Sort planes in airport 2 according to the number of passengers ascending:")
    airport2.sortPlanesByNumOfPassengersAscending()
    print(airport2)
    print("Airport 3:", airport3)
    print("Sort planes in airport 3 according to the number of passengers ascending:")
    airport3.sortPlanesByNumOfPassengersAscending()
    print(airport3)
    print()
    print("Airport 1:", airport1)
    print("Sort planes in airport 1 according to the number of passengers descending:")
    airport1.sortPlanesByNumOfPassengersDescending()
    print(airport1)
    print("Airport 2:", airport2)
    print("Sort planes in airport 2 according to the number of passengers descending:")
    airport2.sortPlanesByNumOfPassengersDescending()
    print(airport2)
    print("Airport 3:", airport3)
    print("Sort planes in airport 3 according to the number of passengers descending:")
    airport3.sortPlanesByNumOfPassengersDescending()
    print(airport3)
    print()
    print("Ex 5: Sort planes according to the number of passengers with the first name starting with a given substring")
    print("Airport 1:", airport1)
    print("Sort planes in airport 1 according to the number of passengers with the first name starting with a given substring An ascending:")
    airport1.sortPlanesByPrefixAscending("An")
    print(airport1)
    print("Airport 2:", airport2)
    print("Sort planes in airport 2 according to the number of passengers with the first name starting with a given substring Geo ascending:")
    airport2.sortPlanesByPrefixAscending("Geo")
    print(airport2)
    print("Airport 3:", airport3)
    print("Sort planes in airport 3 according to the number of passengers with the first name starting with a given substring Mi ascending:")
    airport3.sortPlanesByPrefixAscending("Mi")
    print(airport3)
    print()
    print("Airport 1:", airport1)
    print("Sort planes in airport 1 according to the number of passengers with the first name starting with a given substring An descending:")
    airport1.sortPlanesByPrefixDescending("An")
    print(airport1)
    print("Airport 2:", airport2)
    print("Sort planes in airport 2 according to the number of passengers with the first name starting with a given substring Geo descending:")
    airport2.sortPlanesByPrefixDescending("Geo")
    print(airport2)
    print("Airport 3:", airport3)
    print("Sort planes in airport 3 according to the number of passengers with the first name starting with a given substring Mi descending:")
    airport3.sortPlanesByPrefixDescending("Mi")
    print(airport3)
    print()
    print("Ex 6: Sort planes according to the string obtained by concatenation of the number of passengers in the plane and the destination")
    print("Airport 1:", airport1)
    print("Sort planes in airport 1 according to the string obtained by concatenation of the number of passengers in the plane and the destination ascending")
    airport1.sortPlanesByConcatenationAscending()
    print(airport1)
    print("Airport 2:", airport2)
    print("Sort planes in airport 2 according to the string obtained by concatenation of the number of passengers in the plane and the destination ascending")
    airport2.sortPlanesByConcatenationAscending()
    print(airport2)
    print("Airport 3:", airport3)
    print("Sort planes in airport 3 according to the string obtained by concatenation of the number of passengers in the plane and the destination ascending")
    airport3.sortPlanesByConcatenationAscending()
    print(airport3)
    print("Airport 1:", airport1)
    print("Sort planes in airport 1 according to the string obtained by concatenation of the number of passengers in the plane and the destination descending")
    airport1.sortPlanesByConcatenationDescending()
    print(airport1)
    print("Airport 2:", airport2)
    print("Sort planes in airport 2 according to the string obtained by concatenation of the number of passengers in the plane and the destination descending")
    airport2.sortPlanesByConcatenationDescending()
    print(airport2)
    print("Airport 3:", airport3)
    print("Sort planes in airport 3 according to the string obtained by concatenation of the number of passengers in the plane and the destination descending")
    airport3.sortPlanesByConcatenationDescending()
    print(airport3)
    print()
    print("Ex 7: Identify  planes  that  have  passengers  with  passport  numbers  starting  with  the  same 3 letters")
    print("For airport 1:")
    print(airport1.identifyPlanesPassportThreeLetters())
    print("For airport 2:")
    print(airport2.identifyPlanesPassportThreeLetters())
    print("For airport 3:")
    print(airport3.identifyPlanesPassportThreeLetters())
    print()
    print("Ex 8: Identify  passengers  from  a  given  plane  for  which  the  first  name  or  last  namecontain a string given as parameter")
    print("Identify  passengers in airport 1 from plane with nameNumber 1 for  which  the  first  name  or  last  name contain a string 'Mi' given as parameter")
    print(airport1.identifyPassengersGivenPlaneGivenString("1", "Mi"))
    print("Identify  passengers in airport 2 from plane with nameNumber 3 for  which  the  first  name  or  last  name contain a string 'a' given as parameter")
    print(airport2.identifyPassengersGivenPlaneGivenString("3", "a"))
    print("Identify  passengers in airport 3 from plane with nameNumber 4 for  which  the  first  name  or  last  name contain a string 'O' given as parameter")
    print(airport3.identifyPassengersGivenPlaneGivenString("4", "O"))
    print()
    print("Ex 9: Identify plane/planes where there is a passenger with given name")
    print("Identify plane/planes in airport 1 where there is a passenger with given name 'Ana Tatar")
    print(airport1.identifyPlanesPassengerGivenName("Ana", "Tatar"))
    print("Identify plane/planes in airport 2 where there is a passenger with given name 'Maria Pop")
    print(airport2.identifyPlanesPassengerGivenName("Maria", "Pop"))
    print("Identify plane/planes in airport 3 where there is a passenger with given name 'Laura Laura")
    print(airport3.identifyPlanesPassengerGivenName("Laura", "Laura"))
    print()
    print("Exercise 10: Form groups of 𝒌 passengers from the same plane but with different last names (𝒌 is a value given by the user)")
    print("k = 3 in plane 11")
    for elem in plane11.groupKPassengers(3):
        print(f"{elem[0].lastName}, {elem[1].lastName}, {elem[2].lastName}")
    print("k = -2 in plane 11")
    print()
    try:
        for elem in plane11.groupKPassengers(-2):
            print(f"{elem[0].lastName}, {elem[1].lastName}, {elem[2].lastName}")
    except ValueError as ve:
        print(ve)
    print()
    print("k = 20 in plane 11")
    try:
        for elem in plane11.groupKPassengers(20):
            print(f"{elem[0].lastName}, {elem[1].lastName}, {elem[2].lastName}")
    except ValueError as ve:
        print(ve)
    print()
    print("Exercise 11: Form  groups  of  𝒌  planes  with  the  same  destination  but  belonging  to  different  airline companies (𝒌 is a value given by the user)")
    print()
    print("k = 3 in airport 4")
    for elem in airport4.groupKPlanes(3):
        print(f"{elem[0].airline}, {elem[1].airline}, {elem[2].airline}")
    print()
    print("k = -2 in airport 4")
    try:
        for elem in airport4.groupKPlanes(-2):
            print(f"{elem[0].airline}, {elem[1].airline}, {elem[2].airline}")
    except ValueError as ve:
        print(ve)
    print()
    print("k = 2 in airport 1")
    try:
        for elem in airport1.groupKPlanes(4):
            print(f"{elem[0].airline}, {elem[1].airline}, {elem[2].airline}, {elem[3].airline}")
    except ValueError as ve:
        print(ve)

